--정남일 선수가 소속된 팀의 선수들 검색
SELECT * FROM PLAYER
WHERE TEAM_ID = (SELECT TEAM_ID
FROM PLAYER 
WHERE PLAYER_NAME = '정남일');

--축구선수들 중 전체 평균키보다 작은 선수들 검색
--키 내림차순 정렬
SELECT PLAYER_NAME, HEIGHT FROM PLAYER
WHERE HEIGHT < (SELECT AVG(HEIGHT)
FROM PLAYER)
ORDER BY HEIGHT DESC;

--EMP테이블에서 ENAME에 L이 있는 사원들의 DNAME과 LOC(DEPT테이블) 검색
SELECT D.DNAME, D.LOC FROM DEPT D JOIN EMP E
ON D.DEPTNO = E.DEPTNO
WHERE E.ENAME LIKE '%L%';

--JOB TITLE중 'Manager'라는 문자열이 포함된 직원들의 평균 연봉을
--JOB TITLE별로 검색
SELECT J.JOB_TITLE 직무, AVG(E.SALARY) "평균 연봉"
FROM JOBS J JOIN EMPLOYEES E
ON J.JOB_ID = E.JOB_ID
WHERE J.JOB_TITLE LIKE '%Manager%'
GROUP BY JOB_TITLE
ORDER BY AVG(E.SALARY);


--축구선수들 중 정현수가 소속된 팀의 선수들 검색(IN 사용)
--TEAM_ID값이 2개이므로 OR연산자 가능
SELECT * FROM PLAYER
WHERE TEAM_ID IN (SELECT TEAM_ID FROM PLAYER
WHERE PLAYER_NAME = '정현수');

--축구선수들 중에서 각 팀별 키가 가장 큰 선수들 검색(TEAM_ID로 정렬)
--(IN LINE VIEW) FROM절
SELECT P1.PLAYER_NAME, P1.HEIGHT, P1.TEAM_ID 
FROM PLAYER P1, 
(SELECT TEAM_ID, MAX(HEIGHT) MHEIGHT
FROM PLAYER GROUP BY TEAM_ID) P2
WHERE P1.TEAM_ID = P2.TEAM_ID
AND P1.HEIGHT = P2.MHEIGHT
ORDER BY P1.TEAM_ID;


--위의 쿼리문을 (SUB-QUERY) WHERE절로 변경해서 같은 결과 나오게 하기
--WHERE절에서의 IN
--(A, B) IN (C, D) : A=C AND B=D

--경기장 중 경기 일정이 20120501 ~ 20120502 사이에 있는 경기장 검색(IN, BETWEEN사용)
--A IN (B,C,D,E,F)
--A = B OR A = C OR.....
SELECT * FROM STADIUM 
WHERE STADIUM_ID IN
(SELECT STADIUM_ID FROM SCHEDULE S 
WHERE S.SCHE_DATE BETWEEN '20120501' AND '20120502');


--PLAYER테이블에서 생일이 NULL인 선수들을 정준 선수의 생일로 UPDATE하기
--(절대 COMMIT하지 않는다. 바로 결과 확인 후 ROLLBACK하기)


UPDATE PLAYER
SET BIRTH_DATE = (SELECT BIRTH_DATE FROM PLAYER
WHERE PLAYER_NAME = '정준')
WHERE BIRTH_DATE IS NULL;

SELECT PLAYER_NAME, BIRTH_DATE FROM PLAYER;

--PLAYER 테이블에서 왕선재와 생일이 같은 선수들 TEAM_ID별로 검색하기
--TEAM_ID, PLAYER_NAME, BIRTHDAY 검색

SELECT TEAM_ID, PLAYER_NAME, BIRTH_DATE 
FROM PLAYER
WHERE BIRTH_DATE = 
(SELECT BIRTH_DATE FROM PLAYER
WHERE PLAYER_NAME = '왕선재')
GROUP BY TEAM_ID, PLAYER_NAME, BIRTH_DATE
ORDER BY TEAM_ID;

--EMPLOYEES 테이블에서 Den의 전화번호 앞3자리와 같은 사원들
--JOB_ID별로 검색
--JOB_ID, PHONE_NUMBER, FIRST_NAME

SELECT JOB_ID, PHONE_NUMBER, FIRST_NAME FROM EMPLOYEES
WHERE PHONE_NUMBER 
LIKE 
((SELECT SUBSTR(PHONE_NUMBER,1,3)
FROM EMPLOYEES
WHERE FIRST_NAME = 'Den')||'%')
GROUP BY JOB_ID, PHONE_NUMBER, FIRST_NAME;

--EMP 테이블에서 JOB별 평균 급여를 반올림해서 정수로 검색하기
--JOB으로 정렬 
SELECT JOB, ROUND(AVG(SAL)) FROM EMP
GROUP BY JOB
ORDER BY JOB;


--STADIUM 테이블에서 경기장 이름과 홈팀명 검색
--TEAM_ID, TEAM_NAME, STADIUM_NAME
SELECT NVL(T.TEAM_ID,'없음') "팀 번호", NVL(T.TEAM_NAME,'없음') "팀명", 
S.STADIUM_NAME "경기장 이름" 
FROM STADIUM S LEFT OUTER JOIN TEAM T
ON S.HOMETEAM_ID = T.TEAM_ID
ORDER BY 1;

