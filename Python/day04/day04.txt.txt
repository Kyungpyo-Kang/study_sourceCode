연산자
	기능이 있는 특수문자이다.

연산자 우선순위
	최우선 연산자
	단항 연산자
	산술 연산자
	쉬프트 연산자
	관계 연산자
	논리 연산자
	삼항 연산자
	대입 연산자

결합성
	하나의 수식에 같은 우선순위의 연산자들이
	여러개 나올 때 알맞는 방향으로 결합되어
	연산되는 성질

비트 연산

python3.5버전부터는 import math를 통해 실수 오류를 줄일 수 있다.
만약 3.5버전 이하라면 from decimal import Decimal을 통해 해결할 수 있다.


	논리 연산자
	& 논리곱		: 두 비트가 모두 1이면 1
	|   논리 합		: 둘 중 하나라도 1이면 1
	^  배타논리합(XOR)	: 두 비트가 서로 다르면 1

	예) 1010


	단항 연산자
	~ 논리부정(NOT)	: 0은 1로 1은 0으로 바꿔준다.
			   ~a = -a-1


	부호 비트
		최상위 비트를 부호비트라 하고
		양수는 0, 음수는 1로 표현한다.


2의 보수
	문제) 1 1110 0110 
	1. 우에서 좌로 읽는다. (←)
	2. 1을 찾는다.
	3. 그 다음 비트부터 반대로 바꿔준다.
	예 ) 0 0001 1010
	4. 10진수로 계산한다.
		예) 26
	5. -를 붙인다.
		정답) -26

쉬프트 연산자
	<<(LEFT SHIFT)
	>>(RIGHT SHIFT)
	
	a << b : a를 b만큼 좌로 비트이동
	a >> b : a를 b만큼 우로 비트이동	
	예)10 << 1 == 20
	0000 1010 << 1 == 0001 0100 == 20

	비트 이동시 빈 칸은 0으로 채워지고(음수는 1)
	넘어간 비트는 자동으로 잘린다.

import math

math.isclose(0.1+0.2, 0.3)
Out[27]: True

from decimal import Decimal

float(Decimal('0.1')+Decimal('0.2')
)
Out[29]: 0.3

---------------------------------------------------------------------------------------------
조건식
	결과가 참 또는 거짓 둘 중 하나가 나오는 식
	0 : 거짓
	0 이외의 모든 수 : 참(1)
	
파이썬에서의 참과 거짓 값
True : 참
False : 거짓


	관계 연산자
	==	: 같다
	!=	: 같지 않다.
	<,>	: 초과, 미만
	<=,>=	: 이상, 이하


	논리 연산자
	and	: A and B : A조건식과 B조건식 모두 참일 때 참
	or	: A or B : 둘 중 하나라도 참이면 참


	단항 연산자
	not	: not A : A조건식이 참이면 거짓으로, 거짓이면 참으로 변경























