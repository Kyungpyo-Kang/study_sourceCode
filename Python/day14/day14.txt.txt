클래스 (반)
	공통 요소가 모여 있는 곳

	1. 주어이다.
		Monkey.eat("바나나")
		주어	동사	목적어
		클래스는 문장 맨 앞에 등장하므로
		앞글자를 대문자로 작성한다.

	2. 타입이다.
		공통 요소가 있는 것들을 여러개
		선언하면 비효율적이므로, 클래스에 
		한 번씩 선언하고 가져다 쓴다.
		대신 그 클래스 타입이여야만 한다.

객체(instance variable) 
	클래스는 추상적인 개념이고 이 추상적인 개념을
	실체화 시켜야지만 사용할 수 있다. 따라서
	추상적인 개념을 실체화시킨 것을 객체라고 한다.


객체화(instance)
	추상적인 개념을 구체화 시키는 작업
	객체명 = 클래스명()
클래스 선언 
	class 클래스명:
		필드(객체, 메소드)


생성자
	클래스명()을 생성자라고 하며, 이름 뒤에 
	소괄호가 있기 때문에 메소드의 기능과 똑같다.
	하지만 리턴이 없기 때문에 메소드라고 부르지 않고
	생성자라고 부른다.
	생성자의 역할은 클래스에 있는 필드를 메모리에 
	할당해주고 그 필드의 주소값을 가지고 돌아오는 것이다.
	따라서 개발자가 직접 리턴값을 작성하면 안되기
	때문에 리턴기능을 지원하지 않는다.

self
	하나의 클래스 타입에는 여러개의 객체가 존재하기
	때문에 클래스 내에서 하나의 메소드로는 어떤
	객체에서 접근했는지를 알 수가 없다.
	따라서 객체로 필드 내의 메소드에 접근하는 순간
	자동으로 그 객체가 가지고 있는 주소값이 전달되고
	그 값을 받는 매개변수를 self로 지정한다.
	클래스내에서 메소드 선언 시 반드시 매개변수  self
	를 선언해준다.

생성자의 목적
	1. 클래스의 필드를 메모리에 할당하고 주소값을
	    가져온다.

	2. 초기화


기본 생성자
	클래스 선언시 자동으로 기본 생성자가 만들어진다.
	코드상에는 보이지 않지만 내부적으로 선언된다.

생성자 선언
	def __init__(self) :
		실행할 문장

	사용자가 직접 생성자 선언 시
	이 생성자를 기본 생성자로 인식한다.




















		 	