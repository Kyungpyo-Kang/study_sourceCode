koreastudyroom.com
코리아 IT 아카데미 수강생 로그인 > C언어 선택
수업자료 다운로드!
--------------------------------------------------------------------
함수

	이름()
	단, 키워드()는 함수가 아니다.
	예) for(), if(), ....는 함수가 아니다.

	f	(x)	=	2x+1
      함수명	매개		리턴값
		변수

함수의 정의
	(1)리턴타입 (2)함수명(자료형 (3)매개변수,....) {
		(4)실행할 문장;
		(5)return 리턴값;
	}


(1) 리턴값의 타입을 작성한다. 만약 리턴이 없으면 void를 작성한다.
(2) 동사로 작성한다(연필(매개변수)로 쓴다(함수))
(3) 생략이 가능하다. 매개변수가 없으면 외부에서 값을 전달받을 수 없다.
(4) 생략이 가능하다.
(5) 생략이 가능하다.

함수 정의 시 주의사항
	선언은 함수 밖에서, 사용은 함수 안에서 한다.
	사용하는 라인보다 위에 선언되어 있어야 한다.
	위에서 아래로 읽기 때문이다.
	만약 사용하는 라인보다 밑에 선언되어 있다면 함수 선언을 위에 해준다.



함수의 선언
	리턴타입 함수명(자료형,....);


	int add(int, int);

	void main() {
		add(10,4);
	}

	int add(int num1, int num2) {
		return num1 + num2;
	}


함수 정의 순서
	문제) 두 정수의 덧셈 함수 만들기

	1. 함수명을 생각한다.
		add, sum, plus, deohagi, addIntandInt, ...

		add() {}

	2. 매개변수를 생각한다.
		
		add(int num1, int num2) {}add() {}

	3. 실행할 문장을 생각한다.

		add(int num1, int num2) {}add() {
			printf("두 정수의 덧셈 함수입니다.\n";	
		}

	4. 리턴값을 생각한다.

		add(int num1, int num2) {}add() {
			int result = num1 + num2;
			printf("두 정수의 덧셈 함수입니다.\n";	
			return result;
		}


	5. 리턴 타입을 결정한다.

		int add(int num1, int num2) {}add() {
			int result = num1 + num2;
			printf("두 정수의 덧셈 함수입니다.\n";	
			return result;
		}



함수의 사용
	함수명(값1,....);
	함수명();

	매개변수가 있다면 순서와 타입에 맞게 작성해주고,
	리턴값이 있다면 사용한 부분 통째로를 리턴값으로 보자!


함수를 사용하는 이유

리턴을 사용해야 할 때

리턴을 사용하지 않을 때


			



















