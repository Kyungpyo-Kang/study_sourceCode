예외 처리

	에러 : 심각한 오류
	예외 : 덜 심각한 오류

try{
	예외가 발생할 수 있는 문장	

}catch(예외이름 객체명){
	예외 발생시 실행할 문장

}finally{
	예외에 상관없이 무조건 실행해야 하는 문장
}
-------------------------------------------------------------------------------------------
API(Application Programming Interface)
응용 프로그램 프로그래밍 인터페이스

자바 시스템을 제어하기 위해서 자바에서 제공하는 명령어들을
의미한다.
선배 개발자들이 JAVA에서 코딩을 쉽게 할 수 있도록 만들어
놓은 클래스들의 집합

java.lang
자바 프로그래밍을 위한 가장 기본적인 패키지와 클래스를 포함

java.util
프로그램을 제어하기 위한 클래스들과
데이터를 효율적으로 저장하기 위한 클래스들을 담고 있다.

java.io
키보드, 모니터, 프린터, 파일 등을 제어할 수 있는 클래스 집합

java.net
통신을 위한 기능들을 담고있다.
---------------------------------------------------------------------
http://docs.oracle.com/javase

API의 종류는 굉장히 많고 다양하기 때문에 모두 외우는 것은
불가능하다.
그렇기 때문에 처음 보는 API라도 설명을 잘 읽고 맞는 목적으로
사용하는 것을 알아야 한다.

javadoc(클래스, 메소드에 대한 도움말)
JAVA API 문서는 javadoc로 만들어진 문서라고 볼 수 있다.

어노테이션 주석(@)
/**
	
*/

@author		: 개발자
@exception	: 메소드에서의 예외 확인
@param		: 메소드 매개변수
@return		: 메소드 리턴값
@see		: 관련된 주제에 관한 링크 저장
@serial		: 직렬화 필드
@since		: 릴리즈 기록(JDK)
@throws		: 발생할 수 있는 예외
@version		: 클래스의 버전
---------------------------------------------------------------------
StringTokenizer와 split()

1)구분점 사이에 데이터가 없을 경우 split()은 공백을 반환한다.
2)문자열 마지막이 구분점으로 끝나면 split()에 토큰 갯수를
   알려줘야만 공백을 반환한다.

StringTokenizer가 속도적인 측면으로는 성능이 더 좋다.
하지만 값이 존재하지 않더라도 해당 데이터가 없다는 것을
확실하게 판단해야 할 때에는 split()을 사용해야만 한다.






















