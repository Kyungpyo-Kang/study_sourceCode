SET
	SET은 집합이다.
	중복집합이 아니라면 중복되는 원소를 포함할 수 없다.
	값이 있는지 없는지 검사의 목적이 있다.

	값을 중복해서 저장할 수 없다.
	저장된 값들은 인덱스가 없기 때문에
	저장 순서가 고정되어 있지 않다.

구현 클래스
	HashSet

	Set은 검색의 목적이 있기 때문에 순서 정보를 관리할
	필요가 없어서 데이터 크기에 상관없이 검색에 걸리는
	시간이 매우 짧다.

	그러므로 기능적 차이가 없다면 HashSet을 써야한다.
-------------------------------------------------------------------------
Map
	Key와 Value 한 쌍으로 저장된다.
	검색에 용이하다.

	Key값은 중복이 될 수 없다. 따라서 Set 타입이다.
	Value는 중복이 가능하고 Collection 타입이다.

	한 쌍으로 저장되고 이 한 쌍을 Entry라고 한다.

	Key -> 해쉬테이블 -> Value
	Key <- 해쉬테이블 <- Value

	HashMap<K, V> map = new HashMap<>();

	put()은 2가지 사용방법이 있다.
	1. key가 중복되지 않으면 추가
	2. key가 중복되면 해당 key의 value 수정
-------------------------------------------------------------------------
소프트웨어 디자인 패턴
MVC모델(Model-View-Controller)

패키지화
	기본 패키지에 클래스가 있으면 인식이 안된다.
	반드시 패키지화 되어 있어야 한다.

기본생성자
	객체가 생성될 때 기본 생성자를 이용하기 때문에
	반드시 기본 생성자가 있어야 한다.

접근자 private
	객체의 값은 외부에서 직접 접근할 수 없도록 private
	으로 선언한다.
	메소드로만 접근하게 해야한다.

getter(), setter()
	외부에서 접근할 수 있어야하는 메소드이므로
	public으로 선언한다.

Model : 저장소에 있는 값들을 저장할 수 있는 객체가 모여있는 곳
View : 화면 구성
Controller : 여러 기능들을 구현하는 곳(메소드)
























