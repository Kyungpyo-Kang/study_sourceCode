싱글톤 패턴
	객체가 단 한개만 존재해야 할 때 설계하는 패턴
	외부에서 new 생성자()를 하지 못하게 막아줘야 한다.
	그렇게 하기 위해서는 생성자를 private으로 써주고
	클래스 내부에서 객체를 하나 만들어서 리턴할 수 있는 메소드를 선언해준다.
	외부에서는 그 메소드로만 사용하며, 결과적으로 모든 곳에서 객체 하나로
	사용된다.
----------------------------------------------------------------------------------------------------
GUI(Graphic User Interface)
	
AWT
	운영체제의 특징에 따라 화면을 구성한다.

SWING
	자바에서 지정되는 look&feel을 적용하여 모든 운영체제에서 동일하게 구현됨


Container
	창을 컨테이너라고 한다.
	반드시 한 개 이상이 존재해야 하며 컨테이너 위에 컨테이너 혹은
	컴포넌트가 올라간다.
	awt : Frame, Panel,....
	swing : JFrame, JPanel,...

Component
	컨테이너 위에 올라간 후 화면 구성을 담당하는 클래스들의 집합.
	awt : Button, TextArea, TextField, ....
	swing : JButton, JTextArea, JTextField,....

LayoutManager
	컨테이너 위에 컴포넌트를 올릴 때 위치, 크기 등을 지정하는 클래스들의 집합.
	FlowLayout, BorderLayout, GridLayout, .....
---------------------------------------------------------------------------------------------------
FlowLayout
	컨테이너에 컨테이너 혹은 컴포넌트를 원래크기로 차례차례 배치하는
	레이아웃 매니저.

BorderLayout
	컨테이너에 컨테이너 혹은 컴포넌트를 상,하,좌,우,가운데로 배치할 수 있는
	레이아웃 매니저
	
	add(컴포넌트, BorderLayout.NORTH)	상단에 붙이기
	add("South", 컴포넌트)		하단에 붙이기


GridLayout
	행렬(격자)로 컴포넌트를 붙이는 레이아웃 매니저
---------------------------------------------------------------------------------------------------
이벤트
ActionListener
	addActionListener(actionPerformed()가 재정의된 객체)
	컴포넌트에 귀를 달아주고 actionPerformed()메소드를 재정의해서
	어떤 컴포넌트에 반응했는지를 구분하여 알맞은 기능들을 구현한다.











