Thread(쓰레드)

프로그램
	소스코드로 잘 짜여진 틀

프로세스
	실행된 프로그램
	운영체제로부터 시스템 자원을 할당받는 작업의 단위
	JAVA에서는 운영체제 대신 JVM에 의해 실행된다.

쓰레드
	프로세스의 특정한 수행 경로,
	프로그램 처리 경로, 직렬적이다.
	전적으로 JVM에 의해 스케줄 된다.

멀티 쓰레드(분업)
	하나의 프로세스를 동시에 처리하는 것
	처럼 보이지만 사실은 매우 짧은 단위로
	분할해서 차례로 처리한다.(병렬적)
	여러개의 경로를 가질 수 있게 한다.
	
	장점
		효율성 증가
		처리량 증가
		처리비용 감소
	단점
		복잡하고 설계가 어려움.
		자원 공유 문제(동기화)
		하나의 쓰레드 문제 발생시 모두 문제 발생
		교착상태(DeadLock)

	멀티 쓰레드 중 쓰레드 간에 대기 상태가 종료되지 않아
	무한정 대기만 하는 비정상적인 상태

자바에서 Thread의 핵심은 run()이다.

1. Thread 상속
2. Runnable 지정

join()
쓰레드 사용시 쓰레드 종료 전 다음 로직 수행시 치명적인 오류
발생. 그러므로 먼저할 쓰레드 객체에  join()사용시 뒤의 로직들은 쓰레드가 종료될 때 까지 기다린 후 실행된다.
-----------------------------------------------------------------------
실습)
동물 클래스 3개(Pig, Dog, Cat, Duck,....) 만들기
각 클래스는 Runnable을 지정받는다.
각 동물별 울음소리를 외부에서 초기화 해주고(생성자)
그 울음소리를 10번씩 출력한다.(멀티 쓰레드)

세 마리 동물중 한 동물만 모두 다 울고나서 마지막에 10번 운다.

동기화(Synchronized : 동시에 발생된)

	1. 동시에 같은 자원에 접근할 때 생길 수 있는 문제를
	   해결해 주어야 할 때
	2. 각 쓰레드를 직접 제어할 수 있도록 한다.









