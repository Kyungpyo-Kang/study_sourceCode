메소드
	이름()는 메소드이다. 단, 키워드()는 메소드가 아니다.

	f	(x)	=	2x+1
     메소드명	매개변수	리턴값

메소드 선언

	(5)리턴타입 (1)메소드명(자료형 (2)매개변수,...){
		(3)실행할 문장;
		(4)return 리턴값;
	}

(1) 동사로 작성한다.(연필(매개변수)을 쓴다.(메소드))
(2) 생략 가능하다. 외부에서 들어오는 값을 받을 준비를 하는 저장공간
(3) 생략 가능하다.
(4) 생략 가능하다.
(5) 리턴 값의 타입을 결정하는 부분, 만약 리턴이 생략되었다면 void 타입을 작성한다.

메소드 사용

	메소드명(값, 값,...)
	매개변수의 순서와 갯수, 타입에 맞게 값을 전달해 준다.
	만약 메소드가 리턴값이 있다면 사용부분 통채로를 리턴값으로 보자!!!!!!!

메소드 선언 순서

문제)두 정수의 덧셈 메소드

1. 메소드 이름을 생각한다.
	void add(){}

2. 매개변수를 생각한다.
	void add(int num1, int num2){}

3. 실행할 문장을 생각한다.
	void add(int num1, int num2){
		System.out.println("두 정수의 덧셈 메소드");
	}

4. 리턴값을 생각한다.
	void add(int num1, int num2){
		System.out.println("두 정수의 덧셈 메소드");
		return num1 + num2;
	}

5. 리턴타입을 결정한다.
	int add(int num1, int num2){
		System.out.println("두 정수의 덧셈 메소드");
		return num1 + num2;
	}

메소드 주의사항

	메소드 안에 다른 메소드를 선언할 수 없다.
	반드시 메소드 안에서 메소드를 사용한다.

-------------------------------------------------------------------------------------
main 메소드

	작성한 코드들이 실행프로그램으로 만들어지려면 반드시 main()안에서 작성한다.
	static 키워드가 붙어있기 때문에 컴파일시 가장 먼저 메모리에 할당된다.
	따라서 일반 메소드를 main()에서 사용하면 main()은 그 메소드를 모른다.

	1. 사용할 메소드 선언부에도 static을 붙여준다.
		같이 올라가면 main()도 누군지 알기 때문이다.

	2. 사용할 메소드의 소속을 알려준다.
		사용할 메소드가 선언된 클래스타입의 변수를 만들어주고
		그 변수에 마침표를 찍어서 소속을 알려준 후 사용한다.

	컴파일시 가장먼저 main()가 실행된다. 따라서 따로 main()을 사용할 필요가 없다.


	cmd창(자바파일이 있는 경로 붙여넣기)
	>cd C:\JAVA1_1400_hds\workspace\day06\src\day06
	>javac 클래스명.java
	>cd ..
	>java 패키지명.클래스파일명 문자열 문자열 ....















